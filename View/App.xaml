<Application x:Class="View.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:View"
			 StartupUri="MainWindow.xaml">
	<Application.Resources>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

		<!--Styles-->
		<!--Style to remove all highlighting from ListBoxItems, Source: https://stackoverflow.com/a/22933260/10451042 -->
		<Style x:Key="ListBoxItemNoHighlighting"
			   TargetType="{x:Type ListBoxItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Grid Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="contentPresenter"
															 Storyboard.TargetProperty="Opacity"
															 Duration="0"
															 To=".55" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="Selected" />
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement"
																		   Storyboard.TargetProperty="Visibility"
																		   Duration="0">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter x:Name="contentPresenter"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}" />
							<Rectangle x:Name="FocusVisualElement"
									   Fill="{x:Null}"
									   Stroke="{x:Null}"
									   StrokeThickness="0"
									   Visibility="Collapsed"
									   RadiusX="1"
									   RadiusY="1" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--This style doesn't work everywhere??, so it was replaced by ListBoxItemNoHighlighting-->
		<!--<Style x:Key="ListBoxNoHighlighting"
			   TargetType="{x:Type ListBox}">
			<Style.Resources>
				-->
		<!-- Background of selected item when focused -->
		<!--
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" />
				-->
		<!-- Background of selected item when not focused -->
		<!--
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" />
				-->
		<!-- Foreground of selected item when focused -->
		<!--
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey }"
								 Color="Black" />
				-->
		<!-- Foreground of selected item when not focused -->
		<!--
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
								 Color="Black" />
			</Style.Resources>
		</Style>-->

		<Style x:Key="UIButton"
			   TargetType="Button">
			<Setter Property="FontSize"
					Value="15"></Setter>
			<Setter Property="Margin"
					Value="5"></Setter>
		</Style>
		<Style x:Key="UITextBox"
			   TargetType="TextBox">
			<Setter Property="Margin"
					Value="5"></Setter>
			<Setter Property="FontSize"
					Value="15"></Setter>
		</Style>
		<Style x:Key="UILabel"
			   TargetType="Label">
			<Setter Property="FontSize"
					Value="15"></Setter>
		</Style>

		<!--Messages-->
		<Style x:Key="UITextBlock"
			   TargetType="TextBlock">
			<Setter Property="Margin"
					Value="5"></Setter>
			<Setter Property="FontSize"
					Value="15"></Setter>
			<Setter Property="TextWrapping"
					Value="Wrap"></Setter>
		</Style>
		<Style x:Key="UISuccessTextBlock"
			   TargetType="TextBlock">
			<Setter Property="Margin"
					Value="5"></Setter>
			<Setter Property="FontSize"
					Value="15"></Setter>
			<Setter Property="TextWrapping"
					Value="Wrap"></Setter>
			<Setter Property="Foreground"
					Value="LimeGreen"></Setter>
		</Style>
		<Style x:Key="UIErrorTextBlock"
			   TargetType="TextBlock">
			<Setter Property="Margin"
					Value="5"></Setter>
			<Setter Property="FontSize"
					Value="15"></Setter>
			<Setter Property="TextWrapping"
					Value="Wrap"></Setter>
			<Setter Property="Foreground"
					Value="Red"></Setter>
		</Style>

		<!--Control Templates-->
		<ControlTemplate x:Key="WasteBasketButton"
						 TargetType="Button">
			<ContentPresenter Margin="0"
				   Height="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
				   >
				<ContentPresenter.Content>
					<Image>
						<Image.Style>
							<Style TargetType="{x:Type Image}">
								<Setter Property="Source"
										Value="images/wasteBasket.png" />
								<Style.Triggers>
									<Trigger Property="IsMouseOver"
											 Value="True">
										<Setter Property="Source"
												Value="images/wasteBasketRed.png" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</Image.Style>
					</Image>
				</ContentPresenter.Content>
			</ContentPresenter>
		</ControlTemplate>

		<!--Data Templates-->
		<DataTemplate x:Key="TodoTemplate">
			<Border Margin="2"
					BorderBrush="Black"
					BorderThickness="0.4,0.5,0.5,0.5"
					CornerRadius="5"
					Background="#FFFFFAF1">
				<DockPanel>
					<StackPanel x:Name="CheckBoxContainer"
								Height="25"
								Orientation="Horizontal"
								Margin="5,5,0,5">
						<Viewbox Height="{Binding Path=ActualHeight, ElementName=CheckBoxContainer}">
							<CheckBox Command="{Binding CheckOffCommand, ElementName=MainWindowDataContext}"
									  CommandParameter="{Binding}"
									  IsChecked="{Binding Completed, Mode=OneWay}" />
						</Viewbox>
					</StackPanel>
					<TextBlock Text="{Binding Title}"
							   FontSize="16"
							   Padding="5"
							   DockPanel.Dock="Left"
							   TextAlignment="Left" />
					<Button x:Name="ButtonDelete"
							Template="{StaticResource WasteBasketButton}"
							Command="{Binding DeleteCommand, ElementName=MainWindowDataContext}"
							CommandParameter="{Binding}"
							HorizontalAlignment="Right"
							Visibility="{Binding IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
					</Button>
				</DockPanel>
			</Border>
		</DataTemplate>

		<DataTemplate x:Key="TodoDetailsTemplate">
			<DockPanel Grid.Column="1"
					   Grid.Row="2"
					   Margin="10"
					   VerticalAlignment="Bottom">
				<Label x:Name="LabelTitle"
					   DockPanel.Dock="Top"
					   Target="{Binding ElementName=TextBoxTitle}"
					   Style="{StaticResource UILabel}">_Title</Label>
				<TextBox x:Name="TextBoxTitle"
						 DockPanel.Dock="Top"
						 Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"
						 Style="{StaticResource UITextBox}" />
				<Label x:Name="LabelDescription"
					   DockPanel.Dock="Top"
					   Target="{Binding ElementName=TextBoxDescription}"
					   Style="{StaticResource UILabel}">_Description</Label>
				<TextBox x:Name="TextBoxDescription"
						 DockPanel.Dock="Top"
						 MaxLines="5"
						 MinLines="5"
						 TextWrapping="Wrap"
						 Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}"
						 Style="{StaticResource UITextBox}"
						 Height="102"
						 AcceptsReturn="True"
						 AcceptsTab="True" />
				<TextBlock x:Name="LabelDueOn"
						   DockPanel.Dock="Top"
						   Margin="5"
						   Style="{StaticResource UITextBlock}">Due on</TextBlock>
				<DatePicker DockPanel.Dock="Top"
							Margin="5"
							SelectedDate="{Binding DueDate}" />

				<StackPanel x:Name="TodoDetailButtons"
							DockPanel.Dock="Top"
							Orientation="Horizontal"
							HorizontalAlignment="Center"
							Margin="0"
							VerticalAlignment="Top">
					<Button x:Name="ButtonSave"
							Command="{Binding SaveCommand, ElementName=MainWindowDataContext}"
							CommandParameter="{Binding}"
							Style="{StaticResource UIButton}"
							IsEnabled="{Binding SelectedItems.Count, ElementName=ListBoxTodos}">_Save Changes</Button>
					<Button x:Name="ButtonDiscard"
							Command="{Binding LoadCommand, ElementName=MainWindowDataContext}"
							CommandParameter="{Binding}"
							Style="{StaticResource UIButton}"
							IsEnabled="{Binding SelectedItems.Count, ElementName=ListBoxTodos}">D_iscard Changes</Button>
				</StackPanel>
			</DockPanel>
		</DataTemplate>
	</Application.Resources>
</Application>
